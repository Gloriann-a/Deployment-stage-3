# Minimal proxy template (valid inside http{} context)
upstream app_blue { server app_blue:3000; }
upstream app_green { server app_green:3000; }

map $ACTIVE_POOL $backend_upstream {
    default app_blue;
    blue app_blue;
    green app_green;
}

# --- ðŸªµ Custom log format for observability ---
log_format custom_json escape=json
    '{ "time": "$time_local", '
    '"remote_addr": "$remote_addr", '
    '"method": "$request_method", '
    '"uri": "$request_uri", '
    '"status": "$status", '
    '"request_time": "$request_time", '
    '"upstream_status": "$upstream_status", '
    '"upstream_addr": "$upstream_addr", '
    '"upstream_response_time": "$upstream_response_time", '
    '"pool": "$http_x_app_pool", '
    '"release": "$http_x_release_id" }';

access_log /var/log/nginx/access.log custom_json;

server {
    listen 80;

    # Proxy /version explicitly to avoid static fallback
    location = /version {
        proxy_pass http://$backend_upstream/version;
        proxy_pass_header X-App-Pool;
        proxy_pass_header X-Release-Id;
    }

    # All other requests proxy to backend
    location / {
        proxy_pass http://$backend_upstream;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-App-Pool $ACTIVE_POOL;
        proxy_set_header X-Release-Id $RELEASE_ID_${ACTIVE_POOL};
        proxy_connect_timeout 1s;
        proxy_read_timeout 3s;
        proxy_send_timeout 3s;
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
    }

    location = /healthz {
        proxy_pass http://$backend_upstream/healthz;
    }
}